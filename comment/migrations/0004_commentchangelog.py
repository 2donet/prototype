# Generated by Django 5.1.4 on 2025-07-26 15:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('comment', '0003_comment_to_report'),
        ('project', '0002_connection_note'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('USER_EDIT', 'User Edit'), ('MODERATOR_EDIT', 'Moderator Edit'), ('STATUS_CHANGE', 'Status Change'), ('CONTENT_REMOVAL', 'Content Removed'), ('AUTHOR_REMOVAL', 'Author Removed'), ('AUTHOR_AND_CONTENT_REMOVAL', 'Author and Content Removed'), ('THREAD_DELETION', 'Thread Deleted'), ('BULK_THREAD_DELETION', 'Bulk Thread Deletion'), ('APPROVAL', 'Comment Approved'), ('REJECTION', 'Comment Rejected'), ('FLAGGED', 'Comment Flagged')], help_text='Type of change made', max_length=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string')),
                ('previous_content', models.TextField(blank=True, help_text='Content before the change')),
                ('new_content', models.TextField(blank=True, help_text='Content after the change', null=True)),
                ('previous_status', models.CharField(blank=True, choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('FLAGGED', 'Flagged for Review'), ('CONTENT_REMOVED', 'Content Removed by Moderation'), ('AUTHOR_REMOVED', 'Author Hidden by Moderation'), ('AUTHOR_AND_CONTENT_REMOVED', 'Author and Content Removed'), ('THREAD_DELETED', 'Thread Deleted by Moderation'), ('REPLY_TO_DELETED', 'Reply to Deleted Comment')], help_text='Status before the change', max_length=26, null=True)),
                ('new_status', models.CharField(blank=True, choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('FLAGGED', 'Flagged for Review'), ('CONTENT_REMOVED', 'Content Removed by Moderation'), ('AUTHOR_REMOVED', 'Author Hidden by Moderation'), ('AUTHOR_AND_CONTENT_REMOVED', 'Author and Content Removed'), ('THREAD_DELETED', 'Thread Deleted by Moderation'), ('REPLY_TO_DELETED', 'Reply to Deleted Comment')], help_text='Status after the change', max_length=26, null=True)),
                ('reason', models.TextField(blank=True, help_text='Reason provided for the change')),
                ('affected_children_count', models.PositiveIntegerField(default=0, help_text='Number of child comments affected in bulk operations')),
                ('bulk_operation_id', models.UUIDField(blank=True, help_text='UUID to group related bulk operations', null=True)),
                ('changed_by', models.ForeignKey(help_text='User who made the change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_changes_made', to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(help_text='The comment that was changed', on_delete=django.db.models.deletion.CASCADE, related_name='change_log', to='comment.comment')),
                ('moderation_action', models.ForeignKey(blank=True, help_text='Associated moderation action if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changelog_entries', to='comment.moderationaction')),
                ('project', models.ForeignKey(blank=True, help_text='Project context for permission checks', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_change_logs', to='project.project')),
            ],
            options={
                'verbose_name': 'Comment Change Log',
                'verbose_name_plural': 'Comment Change Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['comment', '-timestamp'], name='comment_com_comment_819fb0_idx'), models.Index(fields=['change_type', '-timestamp'], name='comment_com_change__efc493_idx'), models.Index(fields=['changed_by', '-timestamp'], name='comment_com_changed_477a66_idx'), models.Index(fields=['project', '-timestamp'], name='comment_com_project_edad4a_idx'), models.Index(fields=['bulk_operation_id'], name='comment_com_bulk_op_87d383_idx')],
            },
        ),
    ]
