# Generated by Django 5.1.4 on 2025-08-01 11:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('intros', '0002_alter_intro_options_intro_intro_type_intro_order_and_more'),
        ('need', '0002_need_main_project'),
        ('plans', '0002_plan_created_by_plan_is_template_alter_step_desc_and_more'),
        ('problems', '0001_initial'),
        ('project', '0005_alter_membership_is_member'),
        ('task', '0003_alter_task_options_task_actual_hours_task_due_date_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntroRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('under_review', 'Under Review')], default='published', help_text='Status of this relationship', max_length=15)),
                ('linked_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.IntegerField(default=0, help_text='Display order within the entity (higher numbers first)')),
                ('note', models.TextField(blank=True, help_text='Optional note about this relationship')),
            ],
            options={
                'verbose_name': 'Introduction Relationship',
                'verbose_name_plural': 'Introduction Relationships',
                'ordering': ['-order', '-linked_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkingIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempted_target_type', models.CharField(choices=[('task', 'Task'), ('project', 'Project'), ('need', 'Need'), ('problem', 'Problem'), ('plan', 'Plan')], max_length=20)),
                ('attempted_target_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_note', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Linking Issue',
                'verbose_name_plural': 'Linking Issues',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='intro',
            name='positive_order',
        ),
        migrations.RemoveIndex(
            model_name='intro',
            name='intros_intr_status_b1152f_idx',
        ),
        migrations.RemoveIndex(
            model_name='intro',
            name='intros_intr_to_proj_e75f16_idx',
        ),
        migrations.RemoveIndex(
            model_name='intro',
            name='intros_intr_to_task_098eb7_idx',
        ),
        migrations.RemoveIndex(
            model_name='intro',
            name='intros_intr_main_pr_d2d1c7_idx',
        ),
        migrations.RemoveField(
            model_name='intro',
            name='to_need',
        ),
        migrations.RemoveField(
            model_name='intro',
            name='to_plan',
        ),
        migrations.RemoveField(
            model_name='intro',
            name='to_problem',
        ),
        migrations.RemoveField(
            model_name='intro',
            name='to_project',
        ),
        migrations.RemoveField(
            model_name='intro',
            name='to_task',
        ),
        migrations.AddField(
            model_name='intro',
            name='view_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times viewed'),
        ),
        migrations.AddField(
            model_name='intro',
            name='visibility',
            field=models.CharField(choices=[('public', 'Public'), ('logged_in', 'Only Logged-In Users'), ('restricted', 'Restricted (Project Members Only)'), ('private', 'Private (Author Only)')], default='public', help_text='Who can view this introduction', max_length=20),
        ),
        migrations.AddIndex(
            model_name='intro',
            index=models.Index(fields=['status', 'visibility', 'created_at'], name='intros_intr_status_f7fba1_idx'),
        ),
        migrations.AddIndex(
            model_name='intro',
            index=models.Index(fields=['main_project', 'status', 'visibility'], name='intros_intr_main_pr_028b9f_idx'),
        ),
        migrations.AddConstraint(
            model_name='intro',
            constraint=models.CheckConstraint(condition=models.Q(('order__gte', 0)), name='intro_positive_order'),
        ),
        migrations.AddConstraint(
            model_name='intro',
            constraint=models.CheckConstraint(condition=models.Q(('view_count__gte', 0)), name='intro_positive_view_count'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='intro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='intros.intro'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='linked_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intro_relations_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='to_need',
            field=models.ForeignKey(blank=True, help_text='Need this intro relates to', null=True, on_delete=django.db.models.deletion.CASCADE, to='need.need'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='to_plan',
            field=models.ForeignKey(blank=True, help_text='Plan this intro relates to', null=True, on_delete=django.db.models.deletion.CASCADE, to='plans.plan'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='to_problem',
            field=models.ForeignKey(blank=True, help_text='Problem this intro relates to', null=True, on_delete=django.db.models.deletion.CASCADE, to='problems.problem'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='to_project',
            field=models.ForeignKey(blank=True, help_text='Project this intro relates to', null=True, on_delete=django.db.models.deletion.CASCADE, to='project.project'),
        ),
        migrations.AddField(
            model_name='introrelation',
            name='to_task',
            field=models.ForeignKey(blank=True, help_text='Task this intro relates to', null=True, on_delete=django.db.models.deletion.CASCADE, to='task.task'),
        ),
        migrations.AddField(
            model_name='linkingissue',
            name='attempted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linking_issues_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='linkingissue',
            name='intro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linking_issues', to='intros.intro'),
        ),
        migrations.AddField(
            model_name='linkingissue',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linking_issues_resolved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['intro', 'status'], name='intros_intr_intro_i_bb43bc_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['to_project', 'status'], name='intros_intr_to_proj_2a249b_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['to_task', 'status'], name='intros_intr_to_task_3e0ab2_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['to_need', 'status'], name='intros_intr_to_need_f9f60d_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['to_problem', 'status'], name='intros_intr_to_prob_cc53b9_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['to_plan', 'status'], name='intros_intr_to_plan_8f1507_idx'),
        ),
        migrations.AddIndex(
            model_name='introrelation',
            index=models.Index(fields=['linked_by', 'status'], name='intros_intr_linked__41d128_idx'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.UniqueConstraint(condition=models.Q(('to_task__isnull', False)), fields=('intro', 'to_task'), name='unique_intro_task_relation'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.UniqueConstraint(condition=models.Q(('to_project__isnull', False)), fields=('intro', 'to_project'), name='unique_intro_project_relation'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.UniqueConstraint(condition=models.Q(('to_need__isnull', False)), fields=('intro', 'to_need'), name='unique_intro_need_relation'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.UniqueConstraint(condition=models.Q(('to_problem__isnull', False)), fields=('intro', 'to_problem'), name='unique_intro_problem_relation'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.UniqueConstraint(condition=models.Q(('to_plan__isnull', False)), fields=('intro', 'to_plan'), name='unique_intro_plan_relation'),
        ),
        migrations.AddConstraint(
            model_name='introrelation',
            constraint=models.CheckConstraint(condition=models.Q(('order__gte', 0)), name='relation_positive_order'),
        ),
        migrations.AddIndex(
            model_name='linkingissue',
            index=models.Index(fields=['intro', 'resolved'], name='intros_link_intro_i_20974f_idx'),
        ),
        migrations.AddIndex(
            model_name='linkingissue',
            index=models.Index(fields=['attempted_by', 'resolved'], name='intros_link_attempt_563136_idx'),
        ),
        migrations.AddIndex(
            model_name='linkingissue',
            index=models.Index(fields=['created_at'], name='intros_link_created_37d88a_idx'),
        ),
    ]
