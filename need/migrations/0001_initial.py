# Generated by Django 5.1.4 on 2025-07-26 09:35

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        ('skills', '0001_initial'),
        ('task', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Need',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.TextField(verbose_name='description')),
                ('priority', models.IntegerField(blank=True, default=0)),
                ('estimated_time', models.DurationField(blank=True, help_text='Estimated time to fulfill this need', null=True)),
                ('actual_time', models.DurationField(blank=True, help_text='Actual time spent fulfilling this need', null=True)),
                ('deadline', models.DateTimeField(blank=True, help_text='Deadline for this need', null=True)),
                ('resources', models.TextField(blank=True, help_text='Resources required to fulfill this need', null=True)),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated cost to fulfill', max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Actual cost incurred', max_digits=10, null=True)),
                ('progress', models.IntegerField(default=0, help_text='Completion percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completion_notes', models.TextField(blank=True, help_text='Notes about completion', null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('documentation_url', models.URLField(blank=True, help_text='Link to relevant documentation', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('fulfilled', 'Fulfilled'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('members', 'Project Members Only'), ('admins', 'Admins Only')], default='public', max_length=20)),
                ('custom_fields', models.JSONField(blank=True, default=dict, help_text='Additional custom fields in JSON format')),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current', models.BooleanField(default=True)),
                ('is_remote', models.BooleanField(default=False, help_text='Can this need be fulfilled remotely?')),
                ('is_stationary', models.BooleanField(default=False, help_text='Is this need location-dependent (stationary)?')),
                ('skill_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20, null=True)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='satisfied_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='need_added_by', to=settings.AUTH_USER_MODEL)),
                ('depends_on', models.ManyToManyField(blank=True, help_text='Other needs this one depends on', related_name='dependents', to='need.need')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='need.need')),
                ('related_needs', models.ManyToManyField(blank=True, help_text='Other related needs', to='need.need')),
                ('required_skills', models.ManyToManyField(blank=True, help_text='Skills required to fulfill this need', to='skills.skill')),
                ('to_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('to_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='task.task')),
            ],
        ),
        migrations.CreateModel(
            name='NeedAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by', to=settings.AUTH_USER_MODEL)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='need.need')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assigned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NeedHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changes', models.JSONField()),
                ('change_reason', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='need.need')),
            ],
        ),
        migrations.CreateModel(
            name='TimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=1))])),
                ('logged_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_logs', to='need.need')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
