# Generated by Django 5.1.4 on 2025-07-24 15:13

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('need', '0008_need_created_date_need_modified_date_need_status_and_more'),
        ('skills', '0002_alter_skill_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='need',
            name='tags',
        ),
        migrations.AddField(
            model_name='need',
            name='actual_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Actual cost incurred', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='actual_time',
            field=models.DurationField(blank=True, help_text='Actual time spent fulfilling this need', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='completed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='satisfied_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='need',
            name='completed_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='completion_notes',
            field=models.TextField(blank=True, help_text='Notes about completion', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='cost_estimate',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Estimated cost to fulfill', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict, help_text='Additional custom fields in JSON format'),
        ),
        migrations.AddField(
            model_name='need',
            name='deadline',
            field=models.DateTimeField(blank=True, help_text='Deadline for this need', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='depends_on',
            field=models.ManyToManyField(blank=True, help_text='Other needs this one depends on', related_name='dependents', to='need.need'),
        ),
        migrations.AddField(
            model_name='need',
            name='documentation_url',
            field=models.URLField(blank=True, help_text='Link to relevant documentation', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='estimated_time',
            field=models.DurationField(blank=True, help_text='Estimated time to fulfill this need', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='is_current',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='need',
            name='is_remote',
            field=models.BooleanField(default=False, help_text='Can this need be fulfilled remotely?'),
        ),
        migrations.AddField(
            model_name='need',
            name='is_stationary',
            field=models.BooleanField(default=False, help_text='Is this need location-dependent (stationary)?'),
        ),
        migrations.AddField(
            model_name='need',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='need.need'),
        ),
        migrations.AddField(
            model_name='need',
            name='progress',
            field=models.IntegerField(default=0, help_text='Completion percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='need',
            name='related_needs',
            field=models.ManyToManyField(blank=True, help_text='Other related needs', to='need.need'),
        ),
        migrations.AddField(
            model_name='need',
            name='required_skills',
            field=models.ManyToManyField(blank=True, help_text='Skills required to fulfill this need', to='skills.skill'),
        ),
        migrations.AddField(
            model_name='need',
            name='resources',
            field=models.TextField(blank=True, help_text='Resources required to fulfill this need', null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='skill_level',
            field=models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='need',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='need',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='need_added_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='NeedAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by', to=settings.AUTH_USER_MODEL)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='need.need')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assigned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NeedHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changes', models.JSONField()),
                ('change_reason', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='need.need')),
            ],
        ),
        migrations.CreateModel(
            name='TimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=1))])),
                ('logged_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_logs', to='need.need')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
